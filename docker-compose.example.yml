services:
  project-postgres: # Usado apenas para criar o bucket no container global
    container_name: project-postgres
    image: postgres:15
    restart: on-failure
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_SCHEMA=${DB_SCHEMA}
    networks:
      - project-network
      - mapdata-network
    volumes:
      - ./docker/database/init-db.sh:/usr/local/bin/init-db.sh
    entrypoint: >
      sh -c "
      /usr/local/bin/init-db.sh
      "

  project-minio: # Usado apenas para criar o bucket no container global
    container_name: project-minio
    image: minio/mc:latest
    restart: "no"
    environment:
      - APP_NAME=${APP_NAME}
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "
      mc config host add minio http://minio:9100 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY};
      mc mb -p minio/${AWS_BUCKET};
      echo 'Minio is ready!';
      exit 0;
      "
    networks:
      - project-network
      - mapdata-network

volumes:
  postgres_data:
  minio_data:
  cache:
    driver: local

networks:
  project-network:
    driver: bridge
  mapdata-network:
    external: true
